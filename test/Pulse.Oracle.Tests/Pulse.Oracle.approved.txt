namespace Pulse.Oracle
{
    public class OracleHealthCheck : Microsoft.Extensions.Diagnostics.Pulse.IHealthCheck
    {
        public OracleHealthCheck(Pulse.Oracle.OracleHealthCheckOptions options) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.Pulse.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.Pulse.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class OracleHealthCheckOptions
    {
        public OracleHealthCheckOptions() { }
        public string CommandText { get; set; }
        public System.Action<Oracle.ManagedDataAccess.Client.OracleConnection>? Configure { get; set; }
        public string ConnectionString { get; set; }
        public Oracle.ManagedDataAccess.Client.OracleCredential? Credential { get; set; }
        public System.Func<object?, Microsoft.Extensions.Diagnostics.Pulse.HealthCheckResult>? HealthCheckResultBuilder { get; set; }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class OracleHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddOracle(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, Pulse.Oracle.OracleHealthCheckOptions options, string? name = null, Microsoft.Extensions.Diagnostics.Pulse.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddOracle(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Func<System.IServiceProvider, string> connectionStringFactory, string healthQuery = "select * from v$version", System.Action<Oracle.ManagedDataAccess.Client.OracleConnection>? configure = null, string? name = null, Microsoft.Extensions.Diagnostics.Pulse.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddOracle(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, string connectionString, string healthQuery = "select * from v$version", System.Action<Oracle.ManagedDataAccess.Client.OracleConnection>? configure = null, string? name = null, Microsoft.Extensions.Diagnostics.Pulse.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}
