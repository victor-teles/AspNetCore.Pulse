namespace Pulse.Azure.Messaging.EventHubs
{
    public sealed class AzureEventHubHealthCheck : Microsoft.Extensions.Diagnostics.Pulse.IHealthCheck
    {
        public AzureEventHubHealthCheck(Azure.Messaging.EventHubs.Producer.EventHubProducerClient client) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.Pulse.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.Pulse.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class AzureEventHubHealthChecksBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddAzureEventHub(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Func<System.IServiceProvider, Azure.Messaging.EventHubs.Producer.EventHubProducerClient>? clientFactory = null, string? name = "azure_event_hub", Microsoft.Extensions.Diagnostics.Pulse.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}
