namespace Pulse.Azure.IoTHub
{
    public class IoTHubHealthCheck : Microsoft.Extensions.Diagnostics.Pulse.IHealthCheck
    {
        public IoTHubHealthCheck(Pulse.Azure.IoTHub.IoTHubOptions options) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.Pulse.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.Pulse.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class IoTHubOptions
    {
        public IoTHubOptions() { }
        public Pulse.Azure.IoTHub.IoTHubOptions AddConnectionString(string connectionString) { }
        public Pulse.Azure.IoTHub.IoTHubOptions AddRegistryReadCheck(string query = "SELECT deviceId FROM devices") { }
        public Pulse.Azure.IoTHub.IoTHubOptions AddRegistryWriteCheck(System.Func<string>? deviceIdFactory = null) { }
        public Pulse.Azure.IoTHub.IoTHubOptions AddServiceConnectionCheck(Microsoft.Azure.Devices.TransportType transport = 0) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class IoTHubHealthChecksBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddAzureIoTHub(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Action<Pulse.Azure.IoTHub.IoTHubOptions>? optionsFactory, string? name = null, Microsoft.Extensions.Diagnostics.Pulse.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}
