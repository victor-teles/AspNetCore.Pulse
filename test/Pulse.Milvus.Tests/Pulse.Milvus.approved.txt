namespace Microsoft.Extensions.DependencyInjection
{
    public static class MilvusHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddMilvus(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, Pulse.Milvus.MilvusHealthCheckOptions? options = null, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}
namespace Pulse.Milvus
{
    public class MilvusHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public MilvusHealthCheck(Pulse.Milvus.MilvusHealthCheckOptions options) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class MilvusHealthCheckOptions
    {
        public MilvusHealthCheckOptions() { }
        public string Host { get; set; }
        public string Password { get; set; }
        public int Port { get; set; }
        public string Username { get; set; }
    }
}